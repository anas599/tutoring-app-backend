---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  '/class_subjects':
    post:
      summary: Create a class_subject
      tags:
        - class_subjects
      parameters: []
      responses:
        '201':
          description: class_subject created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                duration:
                  type: integer
                image:
                  type: string
                tutorName:
                  type: string
              required:
                - subject
                - description
                - price
                - duration
                - image
                - tutorName
          application/xml:
            schema:
              type: object
              properties:
                subject:
                  type: string
                description:
                  type: string
                price:
                  type: integer
                duration:
                  type: integer
                image:
                  type: string
                tutorName:
                  type: string
              required:
                - subject
                - description
                - price
                - duration
                - image
                - tutorName
    get:
      summary: Retrieves all class_subjects
      tags:
        - class_subjects
      responses:
        '200':
          description: class_subjects found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  subject:
                    type: string
                  description:
                    type: string
                  price:
                    type: integer
                  duration:
                    type: integer
                  image:
                    type: string
                  tutorName:
                    type: string
                required:
                  - id
                  - subject
                  - description
                  - price
                  - duration
                  - image
                  - tutorName
            application/xml:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  subject:
                    type: string
                  description:
                    type: string
                  price:
                    type: integer
                  duration:
                    type: integer
                  image:
                    type: string
                  tutorName:
                    type: string
                required:
                  - id
                  - subject
                  - description
                  - price
                  - duration
                  - image
                  - tutorName
  '/class_subjects/{id}':
    get:
      summary: Delete a class_subject
      tags:
        - class_subjects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: class_subject deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  subject:
                    type: string
                  description:
                    type: string
                  price:
                    type: string
                  duration:
                    type: integer
                  image:
                    type: string
                  tutorName:
                    type: string
                required:
                  - id
                  - subject
                  - description
                  - price
                  - duration
                  - image
                  - tutorName
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  subject:
                    type: string
                  description:
                    type: string
                  price:
                    type: string
                  duration:
                    type: integer
                  image:
                    type: string
                  tutorName:
                    type: string
                required:
                  - id
                  - subject
                  - description
                  - price
                  - duration
                  - image
                  - tutorName
  '/reservations':
    post:
      summary: Create a resservation
      tags:
        - reservations
      parameters: []
      responses:
        '201':
          description: resservation created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                city:
                  type: string
                user_id:
                  type: integer
                class_subject_id:
                  type: integer
                start:
                  type: string
              required:
                - date
                - city
                - user_id
                - class_subject_id
                - start
          application/xml:
            schema:
              type: object
              properties:
                date:
                  type: string
                city:
                  type: string
                user_id:
                  type: integer
                class_subject_id:
                  type: integer
                start:
                  type: string
              required:
                - date
                - city
                - user_id
                - class_subject_id
                - start
    get:
      summary: Retrieves all reservations
      tags:
        - reservations
      responses:
        '200':
          description: reservations found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                  city:
                    type: string
                  user_id:
                    type: integer
                  class_subject_id:
                    type: integer
                  start:
                    type: string
                required:
                  - id
                  - date
                  - city
                  - user_id
                  - class_subject_id
                  - start
            application/xml:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                  city:
                    type: string
                  user_id:
                    type: integer
                  class_subject_id:
                    type: integer
                  start:
                    type: string
                required:
                  - id
                  - date
                  - city
                  - user_id
                  - class_subject_id
                  - start
  '/reservations/{id}':
    get:
      summary: Retrieves a resservation
      tags:
        - reservations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: resservation found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                  city:
                    type: string
                  user_id:
                    type: integer
                  class_subject_id:
                    type: integer
                  start:
                    type: string
                required:
                  - id
                  - date
                  - city
                  - user_id
                  - class_subject_id
                  - start
            application/xml:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                  city:
                    type: string
                  user_id:
                    type: integer
                  class_subject_id:
                    type: integer
                  start:
                    type: string
                required:
                  - id
                  - date
                  - city
                  - user_id
                  - class_subject_id
                  - start
  '/users':
    post:
      summary: Creates a user
      tags:
        - Users
      parameters: []
      responses:
        '201':
          description: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                facebook:
                  type: string
                linkedin:
                  type: string
                twitter:
                  type: string
              required:
                - name
                - email
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                facebook:
                  type: string
                linkedin:
                  type: string
                twitter:
                  type: string
              required:
                - name
                - email
    get:
      summary: Retrieves all users
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: users found
          content:
            application/json:
              schema:
                type: aray
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  facebook:
                    type: string
                  linkedin:
                    type: string
                  twitter:
                    type: string
                required:
                  - id
                  - name
                  - email
                  - facebook
                  - linkedin
                  - twitter
            application/xml:
              schema:
                type: aray
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  facebook:
                    type: string
                  linkedin:
                    type: string
                  twitter:
                    type: string
                required:
                  - id
                  - name
                  - email
                  - facebook
                  - linkedin
                  - twitter
servers:
  - url: http://localhost:3000
    variables:
      defaultHost:
        default: localhost:3000
